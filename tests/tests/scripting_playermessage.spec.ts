import {expect, test} from '@playwright/test';
import {publicTestMapUrl} from "./utils/urls";
import { evaluateScript } from './utils/scripting';
import { getPage } from './utils/auth';

test.describe('Scripting player message function', () => {

    test.beforeEach(
        "Ignore tests on webkit because of issue with camera and microphone",
                ({ browserName }) => {
                    // WebKit has issue with camera
                    test.skip(browserName === 'webkit', 'WebKit has issues with camera/microphone');
                }
      );

    test('play text on the head of user and remove it', async ({ browser}) => {

        await using page = await getPage(browser, 'Alice', publicTestMapUrl("tests/E2E/empty.json", "scripting_follow"));

        let playerMessage;
        
        // Test to displaye text message on the head of user
        await evaluateScript(page, async () => {
            playerMessage = WA.ui.displayPlayerMessage({
                message:"Hello world ðŸ‘‹",
            });
        });

        // Test if the DomElement generated by the character is visible
        await expect(page.locator("span.characterTriggerAction")).toBeVisible();

        // Test to remove message
        await evaluateScript(page, async () => {
            playerMessage?.remove();
        });

        // Test if the DomElement generated by the character is visible
        await expect(page.locator("span.characterTriggerAction")).toBeHidden();

        // Test to displaye text message on the head of user
        await evaluateScript(page, async () => {
            WA.ui.displayPlayerMessage({
                message:"Hello world ðŸ‘‹",
                callback: () => {
                    console.info('Hello world callboack');
                }
            });
        });

        // Test if the DomElement generated by the character is visible
        await expect(page.locator("span.characterTriggerAction")).toBeVisible();
        // Test to click on the message
        await page.locator("span.characterTriggerAction").click();
        // Test if the DomElement generated by the character is visible
        await expect(page.locator("span.characterTriggerAction")).toBeHidden();

        // Test to displaye text message on the head of user
        await evaluateScript(page, async () => {
            WA.ui.displayPlayerMessage({
                message:"Hello world ðŸ‘‹",
                callback: () => {
                    console.info('Hello world callboack');
                }
            });
        });
        // Test if the DomElement generated by the character is visible
        await expect(page.locator("span.characterTriggerAction")).toBeVisible();
        // Press space to interact with the message
        await page.keyboard.press('Space');
        // Test if the DomElement generated by the character is visible
        await expect(page.locator("span.characterTriggerAction")).toBeHidden();


        await page.context().close();
    });
});
