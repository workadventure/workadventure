# Security
#

# Secret used to encode session data in localstorage.
# Required
SECRET_KEY=
# Secret used to access the admin component. Only required if you are using an "admin" server.
ADMIN_API_TOKEN=

#
# Networking
#

# The domain of your install
# Required
DOMAIN=workadventure.localhost

# SAAS admin panel
ADMIN_API_URL=
ADMIN_URL=

#
# Basic configuration
#

# The directory to store data in
DATA_DIR=./wa

# The URL used by default, in the form: "/_/global/map/url.tmj"
START_ROOM_URL=/_/global/workadventure.github.io/map-starter-kit/office.tmj

# If you want to have a contact page in your menu,
# you MUST set CONTACT_URL to the URL of the page that you want
CONTACT_URL=

# The maximum number of users allowed in a bubble. Default is 4.
# Please only raise this value if you have a Livekit server configured.
MAX_PER_GROUP=4
MAX_USERNAME_LENGTH=10
DISABLE_ANONYMOUS=false

# Configure low and recommended bandwidth used by video and screen share in the peer-to-peer connection (in kbit/s)
PEER_VIDEO_LOW_BANDWIDTH=150
PEER_VIDEO_RECOMMENDED_BANDWIDTH=600
PEER_SCREEN_SHARE_LOW_BANDWIDTH=250
PEER_SCREEN_SHARE_RECOMMENDED_BANDWIDTH=1000

# The version of the docker image to use
# MUST uncomment "image" keys in the docker-compose file for it to be effective
VERSION=master

TZ=Europe/Paris

#
# Livekit
#

# The URL of your LiveKit instance (e.g. https://livekit.yourdomain.com)
LIVEKIT_HOST=
LIVEKIT_API_KEY=
LIVEKIT_API_SECRET=


#
# Jitsi
#

JITSI_URL=meet.jit.si
# If your Jitsi environment has authentication set up,
# you MUST set JITSI_PRIVATE_MODE to "true"
# and you MUST pass a SECRET_JITSI_KEY to generate the JWT secret
JITSI_PRIVATE_MODE=false
JITSI_ISS=
SECRET_JITSI_KEY=

# Jitsi settings for the low-level Jitsi API (used by the live-streaming area)
# JITSI_DOMAIN is the domain name of your Jitsi web instance (only the domain name, not the full URL)
JITSI_DOMAIN=
# JITSI_XMPP_DOMAIN is the domain name used by Prosody.
# You can find this value in the Jitsi config.js file ("hosts.domain" key)
# If you are using Jitsi Docker install, this is the value of the XMPP_DOMAIN environment variable.
JITSI_XMPP_DOMAIN=
# JITSI_XMPP_MUC_DOMAIN is the domain name used by Prosody for MUC.
# You can find this value in the Jitsi config.js file ("hosts.muc" key)
# If you are using Jitsi Docker install, this is the value of the XMPP_MUC_DOMAIN environment variable.
JITSI_MUC_DOMAIN=

#
# BigBlueButton settings.
# From your BBB instance, you can get the correct values using the command: "bbb-conf --secret"
# This defaults to a test instance kindly provided by blindsidenetworks.com. Please change this in production settings.
#
BBB_URL=https://test-install.blindsidenetworks.com/bigbluebutton/
BBB_SECRET=8cd8ef52e8e101574e400365b55e11a6

#
# Turn/Stun
#

# URL of the TURN server (needed to "punch a hole" through some networks for P2P connections)
# Can be a comma separated list of servers
# example: TURN_SERVER=turn:turn.example.com:5349,turns:turn.example.com:5349
TURN_SERVER=
# TURN server username and password (if your TURN server uses hard coded credentials)
# Keep empty if you are using a shared auth secret.
TURN_USER=
TURN_PASSWORD=
# If your Turn server is configured to use the Turn REST API, you MUST put the shared auth secret here.
# If you are using Coturn, this is the value of the "static-auth-secret" parameter in your coturn config file.
# Keep empty if you are sharing hard coded / clear text credentials.
TURN_STATIC_AUTH_SECRET=
# URL of the STUN server
# example: STUN_SERVER=stun:stun.l.google.com:19302
STUN_SERVER=

#
# Certificate config
#

# The email address used by Let's encrypt to send renewal warnings (compulsory)
ACME_EMAIL=

#
# Additional app configs
# Configuration for third-party apps
#

# openID
OPENID_CLIENT_ID=
OPENID_CLIENT_SECRET=
OPENID_CLIENT_ISSUER=
OPENID_PROFILE_SCREEN_PROVIDER=
OPENID_LOGOUT_REDIRECT_URL=
OPENID_USERNAME_CLAIM=
OPENID_LOCALE_CLAIM=
OPENID_SCOPE=
OPENID_PROMPT=
FALLBACK_LOCALE=


# Whether the user can choose its name or if the name is dictated by OpenID.
# Can be one of "user_input", "allow_override_opid", "force_opid"
# This setting is only useful if DISABLE_ANONYMOUS=true
#   user_input: the user will be prompted for his/her Woka name
#   force_opid: the user cannot decide his/her Woka name
#   allow_override_opid: by default, the user name from OpenID is used, but the user can change it
OPID_WOKA_NAME_POLICY=user_input

# Matrix configuration

# The internal URL of the Matrix server. This is the URL that the WorkAdventure server will use to communicate with the Matrix server.
# If your Matrix server is running on the same Docker host as WorkAdventure, you can use the container name as the hostname.
# If your Matrix server is running out of Docker, use the full URL.
MATRIX_API_URI=
# The public URL of the Matrix server. This is the URL that the WorkAdventure clients will use to communicate with the Matrix server.
MATRIX_PUBLIC_URI=
# A valid Matrix user that will be used to create rooms and invite users.
MATRIX_ADMIN_USER=
MATRIX_ADMIN_PASSWORD=


#
# Advanced configuration
# Generally does not need to be changed
#

# Networking
HTTP_PORT=80
HTTPS_PORT=443
GRPC_PORT=50051

# Workadventure settings
DISABLE_NOTIFICATIONS=false
SKIP_RENDER_OPTIMIZATIONS=false
STORE_VARIABLES_FOR_LOCAL_MAPS=true

# Prometheus settings
## Uncomment this to enable the /metrics Prometheus endpoint.
## To hit this endpoint, you will need to configure Prometheus with:
## authorization:
##   type: Bearer
##   credentials: "[The value of PROMETHEUS_AUTHORIZATION_TOKEN env variable]"
#PROMETHEUS_AUTHORIZATION_TOKEN=my_password

# Debugging options
DEBUG_MODE=false
LOG_LEVEL=WARN

RESTART_POLICY=unless-stopped

# AWS environement variable for uploader
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=
AWS_BUCKET=
AWS_ENDPOINT=
AWS_URL=
# Time for which signed urls are valid (in seconds)
# UPLOADER_AWS_SIGNED_URL_EXPIRATION=60

# Redis for uploader service of WorkAdventure
## The uploader service stores all files uploaded by the chat service
## 2 possibilities to setup the uploader storage: AWS, REDIS
### AWS with all environement variable AWS
### Redis with this environment variable
UPLOADER_REDIS_HOST=redis
UPLOADER_REDIS_PORT=
UPLOADER_REDIS_DB_NUMBER=0

#
# CHAT
#

# Enable / disable chat
ENABLE_CHAT=true
# Enable / disable upload of file in chat
ENABLE_CHAT_UPLOAD=true
# Chat max uploadable file size (Byte)
UPLOAD_MAX_FILESIZE=10485760
# Enable / disable the online list of users
ENABLE_CHAT_ONLINE_LIST=true
# Enable / disable the disconnected list of users
ENABLE_CHAT_DISCONNECTED_LIST=true
# Max day of chat history that can be fetched by users
## No restriction is : 0 or not defined value
# MAX_HISTORY_CHAT=0

# Embedely key api for rich media embeds
## used in the chat service
EMBEDLY_KEY=

# Prometheus settings
## Uncomment this to enable the /metrics Prometheus endpoint.
## To hit this endpoint, you will need to configure Prometheus with:
## authorization:
##   type: Bearer
##   credentials: "[The value of PROMETHEUS_AUTHORIZATION_TOKEN env variable]"
PROMETHEUS_AUTHORIZATION_TOKEN=

# The maximum time to live of player variables for logged players, expressed in seconds (no limit by default).
# Use "-1" for infinity.
# Note that anonymous players don't have any TTL limit because their data is stored in local storage, not in Redis database.
PLAYER_VARIABLES_MAX_TTL=-1

# Report issues menu
ENABLE_REPORT_ISSUES_MENU=false
REPORT_ISSUES_URL=

# By default, WorkAdventure will send telemetry usage once a day.
# This data contains the version of WorkAdventure used and very rough usage (max number of users...)
# The statistics collected through telemetry can provide developers valuable insights into WorkAdventure versions that
# are actually used. No personal user data is sent. Please keep this setting to true unless your WorkAdventure installation is 'secret'
ENABLE_TELEMETRY=
# This email address will be notified if your WorkAdventure version contains a known security flaw.
# ENABLE_TELEMETRY must be set to "true" for this to work.
SECURITY_EMAIL=

# MAP EDITOR SETTINGS
ENABLE_MAP_EDITOR=true
# Enable broadcast areas in map editor (beta)
FEATURE_FLAG_BROADCAST_AREAS=
# If you want to allow only some users to access the map editor, you can set the list of authorized users here, email separated by commas. (Only possible if OpenID Connect is configured with the email scope)
# This variable is ignored if an AdminAPI is configured
MAP_EDITOR_ALLOWED_USERS=
# If you want to allow all users to access the map editor, you can set this variable to "true".
# Default value is true.
# This variable is ignored if an AdminAPI is configured
MAP_EDITOR_ALLOW_ALL_USERS=true

# You MUST decide an authentication strategy for the map-storage container.
# At least one of ENABLE_BEARER_AUTHENTICATION, ENABLE_BASIC_AUTHENTICATION or ENABLE_DIGEST_AUTHENTICATION must be set to true.
MAP_STORAGE_ENABLE_BEARER_AUTHENTICATION=false
MAP_STORAGE_ENABLE_BASIC_AUTHENTICATION=true
MAP_STORAGE_ENABLE_DIGEST_AUTHENTICATION=false
# If you choose "Bearer", you MUST set a secret token in MAP_STORAGE_AUTHENTICATION_TOKEN or delegate the token verification to a remote service using MAP_STORAGE_AUTHENTICATION_VALIDATOR_URL.
MAP_STORAGE_AUTHENTICATION_TOKEN=
MAP_STORAGE_AUTHENTICATION_VALIDATOR_URL=
# If you choose "Basic" or "Digest", you MUST set a username and password.
MAP_STORAGE_AUTHENTICATION_USER=
MAP_STORAGE_AUTHENTICATION_PASSWORD=

# The Map storage API token is used to authenticate the map storage when it is making requests to external resources.
# If not set, will default to SECRET_KEY
MAP_STORAGE_API_TOKEN=
WHITELISTED_RESOURCE_URLS=


# Need to be authenticated to the Room API. If not set, the Room API will be disabled.
ROOM_API_SECRET_KEY=

SENTRY_DSN_FRONT=
SENTRY_DSN_PUSHER=
SENTRY_DSN_MAPSTORAGE=
SENTRY_DSN_BACK=
## You be able to set the release name in the Sentry UI
SENTRY_RELEASE=
## Sentry auth token
SENTRY_AUTH_TOKEN=

## The environment name
SENTRY_ENVIRONMENT=

SENTRY_ORG=

SENTRY_PROJECT=

## The sampling rate for Sentry traces. Only used if SENTRY_DSN is configured. Defaults to 0.1
SENTRY_TRACES_SAMPLE_RATE=

# Integration tools
KLAXOON_ENABLED=false
KLAXOON_CLIENT_ID=
YOUTUBE_ENABLED=true
GOOGLE_DRIVE_ENABLED=true
GOOGLE_DOCS_ENABLED=true
GOOGLE_SHEETS_ENABLED=true
GOOGLE_SLIDES_ENABLED=true
ERASER_ENABLED=true
EXCALIDRAW_ENABLED=true
EXCALIDRAW_DOMAINS=excalidraw.com
CARDS_ENABLED=true
# If you want to force allow some domains to be embedded in WorkAdventure, you can set the list of authorized domains here, separated by ','.
# Example: EMBEDDED_DOMAINS_WHITELIST=klaxoon.com,google.com
EMBEDDED_DOMAINS_WHITELIST=

# Google drive picker
GOOGLE_DRIVE_PICKER_CLIENT_ID=
GOOGLE_DRIVE_PICKER_APP_ID=

MAX_USERS_FOR_WEBRTC=4

