{{- if and .Values.gateway.enabled .Values.gateway.createGateway -}}
{{- $fullName := include "workadventure.fullname" . -}}
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: {{ .Values.gateway.gatewayName | default (printf "%s-gateway" $fullName) }}
  namespace: {{ .Values.gateway.gatewayNamespace | default .Release.Namespace }}
  labels:
    {{- include "workadventure.labels" . | nindent 4 }}
    {{- with .Values.gateway.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.gateway.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  gatewayClassName: {{ .Values.gateway.gatewayClassName | required "gateway.gatewayClassName is required when gateway.enabled is true" }}
  listeners:
  {{- if .Values.gateway.listeners }}
    {{- toYaml .Values.gateway.listeners | nindent 2 }}
  {{- else }}
    {{- if .Values.singleDomain }}
    - name: http
      protocol: HTTP
      port: 80
      hostname: {{ .Values.domainName | quote }}
      {{- if .Values.gateway.tls }}
    - name: https
      protocol: HTTPS
      port: 443
      hostname: {{ .Values.domainName | quote }}
      tls:
        mode: Terminate
        certificateRefs:
        - name: {{ .Values.gateway.secretName | required "gateway.secretName is required when gateway.tls is true" }}
      {{- end }}
    {{- else }}
    - name: http
      protocol: HTTP
      port: 80
      hostname: "*.{{ .Values.domainName }}"
      {{- if .Values.gateway.tls }}
    - name: https
      protocol: HTTPS
      port: 443
      hostname: "*.{{ .Values.domainName }}"
      tls:
        mode: Terminate
        certificateRefs:
        - name: {{ .Values.gateway.secretName | required "gateway.secretName is required when gateway.tls is true" }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}